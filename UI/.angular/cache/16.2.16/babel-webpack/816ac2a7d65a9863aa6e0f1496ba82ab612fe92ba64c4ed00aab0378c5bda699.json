{"ast":null,"code":"imports: [CommonModule, FormsModule // ✅ ADD THIS LINE\n];\n\nexport class EditCategoryComponent {\n  constructor(route, categoryService, router) {\n    this.route = route;\n    this.categoryService = categoryService;\n    this.router = router;\n    this.id = null;\n  }\n  ngOnInit() {\n    this.paramsSubscription = this.route.paramMap.subscribe({\n      next: params => {\n        this.id = params.get('id');\n        if (this.id) {\n          // get the data from the API for this category Id\n          this.categoryService.getCategoryById(this.id).subscribe({\n            next: response => {\n              this.category = response;\n            }\n          });\n        }\n      }\n    });\n  }\n  onFormSubmit() {\n    const updateCategoryRequest = {\n      name: this.category?.name ?? '',\n      urlHandle: this.category?.urlHandle ?? ''\n    };\n    // pass this object to service\n    if (this.id) {\n      this.editCategorySubscription = this.categoryService.updateCategory(this.id, updateCategoryRequest).subscribe({\n        next: response => {\n          this.router.navigateByUrl('/admin/categories');\n        }\n      });\n    }\n  }\n  onDelete() {\n    if (this.id) {\n      this.categoryService.deleteCategory(this.id).subscribe({\n        next: response => {\n          this.router.navigateByUrl('/admin/categories');\n        }\n      });\n    }\n  }\n  ngOnDestroy() {\n    this.paramsSubscription?.unsubscribe();\n    this.editCategorySubscription?.unsubscribe();\n  }\n}","map":{"version":3,"names":["imports","CommonModule","FormsModule","EditCategoryComponent","constructor","route","categoryService","router","id","ngOnInit","paramsSubscription","paramMap","subscribe","next","params","get","getCategoryById","response","category","onFormSubmit","updateCategoryRequest","name","urlHandle","editCategorySubscription","updateCategory","navigateByUrl","onDelete","deleteCategory","ngOnDestroy","unsubscribe"],"sources":["E:\\InsightHub\\UI\\InsightHub\\src\\app\\features\\category\\edit-category\\edit-category.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { CategoryService } from '../services/category.service';\nimport { Category } from '../models/category.model';\nimport { UpdateCategoryRequest } from '../models/update-category-request.model';\n\n@Component({\n  selector: 'app-edit-category',\n  templateUrl: './edit-category.component.html',\n  styleUrls: ['./edit-category.component.css']\n})\n  imports: [\n    CommonModule,\n    FormsModule  // ✅ ADD THIS LINE\n  ]\nexport class EditCategoryComponent implements OnInit, OnDestroy {\n\n  id: string | null = null;\n  paramsSubscription?: Subscription;\n  editCategorySubscription?: Subscription;\n  category?: Category;\n\n  constructor(private route: ActivatedRoute,\n    private categoryService: CategoryService,\n    private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.paramsSubscription = this.route.paramMap.subscribe({\n      next: (params) => {\n        this.id = params.get('id');\n\n        if (this.id) {\n          // get the data from the API for this category Id\n          this.categoryService.getCategoryById(this.id)\n          .subscribe({\n            next: (response) => {\n              this.category = response;\n            }\n          });\n\n        }\n      }\n    });\n  }\n\n  onFormSubmit(): void {\n    const updateCategoryRequest: UpdateCategoryRequest = {\n      name: this.category?.name ?? '',\n      urlHandle: this.category?.urlHandle ?? ''\n    };\n\n    // pass this object to service\n    if (this.id) {\n      this.editCategorySubscription = this.categoryService.updateCategory(this.id, updateCategoryRequest)\n      .subscribe({\n        next: (response) => {\n          this.router.navigateByUrl('/admin/categories');\n        }\n      });\n    }\n  }\n\n  onDelete(): void {\n    if (this.id) {\n      this.categoryService.deleteCategory(this.id)\n      .subscribe({\n        next: (response) => {\n          this.router.navigateByUrl('/admin/categories');\n        }\n      })\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.paramsSubscription?.unsubscribe();\n    this.editCategorySubscription?.unsubscribe();\n  }\n}\n"],"mappings":"AAYEA,OAAO,EAAE,CACPC,YAAY,EACZC,WAAW,CAAE;AAAA,CACd;;AACH,OAAM,MAAOC,qBAAqB;EAOhCC,YAAoBC,KAAqB,EAC/BC,eAAgC,EAChCC,MAAc;IAFJ,KAAAF,KAAK,GAALA,KAAK;IACf,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;IAPhB,KAAAC,EAAE,GAAkB,IAAI;EAQxB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,SAAS,CAAC;MACtDC,IAAI,EAAGC,MAAM,IAAI;QACf,IAAI,CAACN,EAAE,GAAGM,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;QAE1B,IAAI,IAAI,CAACP,EAAE,EAAE;UACX;UACA,IAAI,CAACF,eAAe,CAACU,eAAe,CAAC,IAAI,CAACR,EAAE,CAAC,CAC5CI,SAAS,CAAC;YACTC,IAAI,EAAGI,QAAQ,IAAI;cACjB,IAAI,CAACC,QAAQ,GAAGD,QAAQ;YAC1B;WACD,CAAC;;MAGN;KACD,CAAC;EACJ;EAEAE,YAAYA,CAAA;IACV,MAAMC,qBAAqB,GAA0B;MACnDC,IAAI,EAAE,IAAI,CAACH,QAAQ,EAAEG,IAAI,IAAI,EAAE;MAC/BC,SAAS,EAAE,IAAI,CAACJ,QAAQ,EAAEI,SAAS,IAAI;KACxC;IAED;IACA,IAAI,IAAI,CAACd,EAAE,EAAE;MACX,IAAI,CAACe,wBAAwB,GAAG,IAAI,CAACjB,eAAe,CAACkB,cAAc,CAAC,IAAI,CAAChB,EAAE,EAAEY,qBAAqB,CAAC,CAClGR,SAAS,CAAC;QACTC,IAAI,EAAGI,QAAQ,IAAI;UACjB,IAAI,CAACV,MAAM,CAACkB,aAAa,CAAC,mBAAmB,CAAC;QAChD;OACD,CAAC;;EAEN;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAAClB,EAAE,EAAE;MACX,IAAI,CAACF,eAAe,CAACqB,cAAc,CAAC,IAAI,CAACnB,EAAE,CAAC,CAC3CI,SAAS,CAAC;QACTC,IAAI,EAAGI,QAAQ,IAAI;UACjB,IAAI,CAACV,MAAM,CAACkB,aAAa,CAAC,mBAAmB,CAAC;QAChD;OACD,CAAC;;EAEN;EAEAG,WAAWA,CAAA;IACT,IAAI,CAAClB,kBAAkB,EAAEmB,WAAW,EAAE;IACtC,IAAI,CAACN,wBAAwB,EAAEM,WAAW,EAAE;EAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}